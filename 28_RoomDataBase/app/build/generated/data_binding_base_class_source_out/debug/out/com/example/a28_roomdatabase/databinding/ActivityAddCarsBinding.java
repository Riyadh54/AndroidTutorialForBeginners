// Generated by view binder compiler. Do not edit!
package com.example.a28_roomdatabase.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.a28_roomdatabase.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddCarsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addCarsBtnSave;

  @NonNull
  public final EditText addCarsEtBirthday;

  @NonNull
  public final EditText addCarsEtId;

  @NonNull
  public final EditText addCarsEtModel;

  @NonNull
  public final EditText addCarsEtName;

  private ActivityAddCarsBinding(@NonNull LinearLayout rootView, @NonNull Button addCarsBtnSave,
      @NonNull EditText addCarsEtBirthday, @NonNull EditText addCarsEtId,
      @NonNull EditText addCarsEtModel, @NonNull EditText addCarsEtName) {
    this.rootView = rootView;
    this.addCarsBtnSave = addCarsBtnSave;
    this.addCarsEtBirthday = addCarsEtBirthday;
    this.addCarsEtId = addCarsEtId;
    this.addCarsEtModel = addCarsEtModel;
    this.addCarsEtName = addCarsEtName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddCarsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddCarsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_cars, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddCarsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_cars_btn_save;
      Button addCarsBtnSave = ViewBindings.findChildViewById(rootView, id);
      if (addCarsBtnSave == null) {
        break missingId;
      }

      id = R.id.add_cars_et_birthday;
      EditText addCarsEtBirthday = ViewBindings.findChildViewById(rootView, id);
      if (addCarsEtBirthday == null) {
        break missingId;
      }

      id = R.id.add_cars_et_id;
      EditText addCarsEtId = ViewBindings.findChildViewById(rootView, id);
      if (addCarsEtId == null) {
        break missingId;
      }

      id = R.id.add_cars_et_model;
      EditText addCarsEtModel = ViewBindings.findChildViewById(rootView, id);
      if (addCarsEtModel == null) {
        break missingId;
      }

      id = R.id.add_cars_et_name;
      EditText addCarsEtName = ViewBindings.findChildViewById(rootView, id);
      if (addCarsEtName == null) {
        break missingId;
      }

      return new ActivityAddCarsBinding((LinearLayout) rootView, addCarsBtnSave, addCarsEtBirthday,
          addCarsEtId, addCarsEtModel, addCarsEtName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
